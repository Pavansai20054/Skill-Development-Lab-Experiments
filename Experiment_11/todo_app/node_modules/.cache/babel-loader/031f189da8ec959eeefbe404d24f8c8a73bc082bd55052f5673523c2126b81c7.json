{"ast":null,"code":"var _jsxFileName = \"S:\\\\IIIrd Year\\\\Skill_Development_Lab\\\\Experiment_11\\\\todo_app\\\\src\\\\components\\\\TodoList.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport TodoItem from './TodoItem.js'; // Import TodoItem component\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction TodoList() {\n  _s();\n  const [tasks, setTasks] = useState([{\n    id: 1,\n    text: 'Doctor Appointment',\n    completed: true\n  }, {\n    id: 2,\n    text: 'Meeting at School',\n    completed: false\n  }]);\n  const [text, setText] = useState(''); // Track input text for adding a task\n\n  function addTask(text) {\n    const newTask = {\n      id: Date.now(),\n      text,\n      completed: false\n    };\n    setTasks([...tasks, newTask]); // Add new task\n    setText(''); // Clear the input field\n  }\n  function deleteTask(id) {\n    setTasks(tasks.filter(task => task.id !== id)); // Remove task by ID\n  }\n  function toggleCompleted(id) {\n    setTasks(tasks.map(task => task.id === id ? {\n      ...task,\n      completed: !task.completed\n    } : task));\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"todo-list\",\n    children: [tasks.map(task => /*#__PURE__*/_jsxDEV(TodoItem, {\n      task: task,\n      deleteTask: deleteTask,\n      toggleCompleted: toggleCompleted\n    }, task.id, false, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 9\n    }, this)), /*#__PURE__*/_jsxDEV(\"input\", {\n      value: text,\n      onChange: e => setText(e.target.value) // Update text state\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => addTask(text),\n      children: \"Add\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 7\n    }, this), \"  \"]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 29,\n    columnNumber: 5\n  }, this);\n}\n_s(TodoList, \"00JUcrPVj/nremxKrmrX/M/wsuY=\");\n_c = TodoList;\nexport default TodoList;\nvar _c;\n$RefreshReg$(_c, \"TodoList\");","map":{"version":3,"names":["React","useState","TodoItem","jsxDEV","_jsxDEV","TodoList","_s","tasks","setTasks","id","text","completed","setText","addTask","newTask","Date","now","deleteTask","filter","task","toggleCompleted","map","className","children","fileName","_jsxFileName","lineNumber","columnNumber","value","onChange","e","target","onClick","_c","$RefreshReg$"],"sources":["S:/IIIrd Year/Skill_Development_Lab/Experiment_11/todo_app/src/components/TodoList.js"],"sourcesContent":["import React, { useState } from 'react'; \r\nimport TodoItem from './TodoItem.js';  // Import TodoItem component\r\n\r\nfunction TodoList() {\r\n  const [tasks, setTasks] = useState([\r\n    { id: 1, text: 'Doctor Appointment', completed: true },\r\n    { id: 2, text: 'Meeting at School', completed: false }\r\n  ]);\r\n\r\n  const [text, setText] = useState('');  // Track input text for adding a task\r\n\r\n  function addTask(text) {\r\n    const newTask = { id: Date.now(), text, completed: false };\r\n    setTasks([...tasks, newTask]);  // Add new task\r\n    setText('');  // Clear the input field\r\n  }\r\n\r\n  function deleteTask(id) {\r\n    setTasks(tasks.filter(task => task.id !== id));  // Remove task by ID\r\n  }\r\n\r\n  function toggleCompleted(id) {\r\n    setTasks(tasks.map(task =>\r\n      task.id === id ? { ...task, completed: !task.completed } : task\r\n    ));\r\n  }\r\n\r\n  return (\r\n    <div className=\"todo-list\">\r\n      {tasks.map(task => (\r\n        <TodoItem \r\n          key={task.id} \r\n          task={task} \r\n          deleteTask={deleteTask} \r\n          toggleCompleted={toggleCompleted} \r\n        />\r\n      ))}\r\n      <input \r\n        value={text}\r\n        onChange={e => setText(e.target.value)}  // Update text state\r\n      />\r\n      <button onClick={() => addTask(text)}>Add</button>  {/* Add task button */}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default TodoList;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,OAAOC,QAAQ,MAAM,eAAe,CAAC,CAAE;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAEvC,SAASC,QAAQA,CAAA,EAAG;EAAAC,EAAA;EAClB,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAGP,QAAQ,CAAC,CACjC;IAAEQ,EAAE,EAAE,CAAC;IAAEC,IAAI,EAAE,oBAAoB;IAAEC,SAAS,EAAE;EAAK,CAAC,EACtD;IAAEF,EAAE,EAAE,CAAC;IAAEC,IAAI,EAAE,mBAAmB;IAAEC,SAAS,EAAE;EAAM,CAAC,CACvD,CAAC;EAEF,MAAM,CAACD,IAAI,EAAEE,OAAO,CAAC,GAAGX,QAAQ,CAAC,EAAE,CAAC,CAAC,CAAE;;EAEvC,SAASY,OAAOA,CAACH,IAAI,EAAE;IACrB,MAAMI,OAAO,GAAG;MAAEL,EAAE,EAAEM,IAAI,CAACC,GAAG,CAAC,CAAC;MAAEN,IAAI;MAAEC,SAAS,EAAE;IAAM,CAAC;IAC1DH,QAAQ,CAAC,CAAC,GAAGD,KAAK,EAAEO,OAAO,CAAC,CAAC,CAAC,CAAE;IAChCF,OAAO,CAAC,EAAE,CAAC,CAAC,CAAE;EAChB;EAEA,SAASK,UAAUA,CAACR,EAAE,EAAE;IACtBD,QAAQ,CAACD,KAAK,CAACW,MAAM,CAACC,IAAI,IAAIA,IAAI,CAACV,EAAE,KAAKA,EAAE,CAAC,CAAC,CAAC,CAAE;EACnD;EAEA,SAASW,eAAeA,CAACX,EAAE,EAAE;IAC3BD,QAAQ,CAACD,KAAK,CAACc,GAAG,CAACF,IAAI,IACrBA,IAAI,CAACV,EAAE,KAAKA,EAAE,GAAG;MAAE,GAAGU,IAAI;MAAER,SAAS,EAAE,CAACQ,IAAI,CAACR;IAAU,CAAC,GAAGQ,IAC7D,CAAC,CAAC;EACJ;EAEA,oBACEf,OAAA;IAAKkB,SAAS,EAAC,WAAW;IAAAC,QAAA,GACvBhB,KAAK,CAACc,GAAG,CAACF,IAAI,iBACbf,OAAA,CAACF,QAAQ;MAEPiB,IAAI,EAAEA,IAAK;MACXF,UAAU,EAAEA,UAAW;MACvBG,eAAe,EAAEA;IAAgB,GAH5BD,IAAI,CAACV,EAAE;MAAAe,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAIb,CACF,CAAC,eACFvB,OAAA;MACEwB,KAAK,EAAElB,IAAK;MACZmB,QAAQ,EAAEC,CAAC,IAAIlB,OAAO,CAACkB,CAAC,CAACC,MAAM,CAACH,KAAK,CAAE,CAAE;IAAA;MAAAJ,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAC1C,CAAC,eACFvB,OAAA;MAAQ4B,OAAO,EAAEA,CAAA,KAAMnB,OAAO,CAACH,IAAI,CAAE;MAAAa,QAAA,EAAC;IAAG;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC,MAAE;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACjD,CAAC;AAEV;AAACrB,EAAA,CAzCQD,QAAQ;AAAA4B,EAAA,GAAR5B,QAAQ;AA2CjB,eAAeA,QAAQ;AAAC,IAAA4B,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}